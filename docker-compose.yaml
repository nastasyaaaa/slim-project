version: "3.3"
services:

  gateway:
    image: ${REGISTRY:-localhost}/gateway:cache
    build:
      context: ./gateway/docker
      dockerfile: development/nginx/Dockerfile
      cache_from:
        - ${REGISTRY:-localhost}/gateway:cache
    ports:
      - "8082:8082"
      - "8083:8083"
      - "8025:8025"

    depends_on:
      - frontend
      - api

  # api
  api:
    image: ${REGISTRY:-localhost}/api:cache
    build:
      context: ./api/docker
      dockerfile: development/nginx/Dockerfile
      cache_from:
        - ${REGISTRY:-localhost}/api:cache
    volumes:
      - ./api:/app/
    depends_on:
      - api-php-fpm

  api-php-fpm:
    image: ${REGISTRY:-localhost}/api-php-fpm:cache
    build:
      context: ./api/docker
      dockerfile: development/php-fpm/Dockerfile
      cache_from:
        - ${REGISTRY:-localhost}/api-php-fpm:cache
    environment:
      APP_DEBUG: 1
      APP_ENV: dev
      PHP_IDE_CONFIG: serverName=API
      DB_HOST: "api-postgres"
      DB_USER: "nana"
      DB_PASSWORD: "123456"
      DB_NAME: "app"
      MAILER_HOST: "mailer"
      MAILER_PORT: 1025
      MAILER_USERNAME: "app"
      MAILER_PASSWORD: "secret"
      MAILER_ENCRYPTION: "tcp"
      MAILER_FROM_EMAIL: "mail@app.test"
    volumes:
      - ./api:/app/

  api-php-cli:
    image: ${REGISTRY:-localhost}/api-php-cli:cache
    build:
      context: ./api/docker
      dockerfile: development/php-cli/Dockerfile
      cache_from:
        - ${REGISTRY:-localhost}/api-php-cli:cache
    environment:
      APP_DEBUG: 1
      APP_ENV: dev
      DB_HOST: "api-postgres"
      DB_USER: "nana"
      DB_PASSWORD: "123456"
      DB_NAME: "app"
      #      MAILER_HOST: "smtp.mailtrap.io"
      #      MAILER_PORT: 25
      #      MAILER_USERNAME: "b3dedfc298c893"
      #      MAILER_PASSWORD: "568ed55f250b42"
      #      MAILER_ENCRYPTION: "tls"
      MAILER_HOST: "mailer"
      MAILER_PORT: 1025
      MAILER_USERNAME: "app"
      MAILER_PASSWORD: "secret"
      MAILER_ENCRYPTION: "tcp"
      MAILER_FROM_EMAIL: "mail@app.test"
    volumes:
      - ./api:/app/

  api-postgres:
    image: ${REGISTRY:-localhost}/api-postgres:cache
    build:
      context: ./api/docker
      dockerfile: development/postgres/Dockerfile
      cache_from:
        - ${REGISTRY:-localhost}/api-postgres:cache
    ports:
      - "54321:5432"
    environment:
      POSTGRES_PASSWORD: "123456"
      POSTGRES_USER: "nana"
      POSTGRES_DB: "app"
    volumes:
      - api-postgres:/var/lib/postgresql/data
    depends_on:
      - api

    #  frontend
  frontend:
    image: ${REGISTRY:-localhost}/frontend:cache
    build:
      context: ./frontend/docker
      dockerfile: development/nginx/Dockerfile
      cache_from:
        - ${REGISTRY:-localhost}/frontend:cache
    volumes:
      - ./frontend:/app/
    depends_on:
      - frontend-node-cli
      - frontend-node-server

  frontend-node-cli:
    image: ${REGISTRY:-localhost}/frontend-node-cli:cache
    build:
      context: ./frontend/docker/development/node
      cache_from:
        - ${REGISTRY:-localhost}/frontend-node-cli:cache
    volumes:
      - ./frontend:/app

  # 3000 port, see gateway
  frontend-node-server:
    image: ${REGISTRY:-localhost}/frontend-node-server:cache
    build:
      context: ./frontend/docker/development/node
      cache_from:
        - ${REGISTRY:-localhost}/frontend-node-server:cache
    volumes:
      - ./frontend:/app

    # .ready file is created after frontend-yarn-install command is done, so we do yarn start only when all dependencies are installed
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
    tty: true

  # services
  mailer:
    image: mailhog/mailhog

  # cucumber
  cucumber-node-cli:
    image: ${REGISTRY:-localhost}/cucumber-node-cli:cache
    build:
      context: ./cucumber/docker/development/node
      cache_from:
        - ${REGISTRY:-localhost}/cucumber-node-cli:cache
    volumes:
      - ./cucumber:/app

volumes:
  api-postgres: